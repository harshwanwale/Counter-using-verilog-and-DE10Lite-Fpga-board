module sevenseg (
  input clk,
  output [6:0] seg
);

  reg [23:0] counter;
  reg [3:0] count;
  reg [6:0] seven_seg;

  always @(posedge clk) begin
    counter <= counter + 1;
    if (counter == 25000000) begin
      counter <= 0;
      count <= count + 1;
      if (count == 10) begin
        count <= 0;
      end
    end
  end

  always @(count) begin
    case (count)
      4'b0000: seven_seg <= 7'b1000000; // 0
      4'b0001: seven_seg <= 7'b1111001; // 1
      4'b0010: seven_seg <= 7'b0100100; // 2
      4'b0011: seven_seg <= 7'b0110000; // 3
      4'b0100: seven_seg <= 7'b0011001; // 4
      4'b0101: seven_seg <= 7'b0010010; // 5
      4'b0110: seven_seg <= 7'b0000010; // 6
      4'b0111: seven_seg <= 7'b1111000; // 7
      4'b1000: seven_seg <= 7'b0000000; // 8
      4'b1001: seven_seg <= 7'b0011000; // 9
      default: seven_seg <= 7'b1111111; // Display nothing (all segments off)
    endcase
  end

  assign seg = seven_seg;

endmodule
